@startuml

'skinparam monochrome true
skinparam packageStyle rectangle
skinparam shadowing false
skinparam linetype polyline
'skinparam linetype orto

skinparam classAttributeIconSize 0

'left to right direction

class ApplicationSession
{
    + static getInstance()
    + getCurrentSession()
}

class UserSession
{
    + getUserEmail()
}

class Skill {
    - skillName

    + addSkill(skill: Skill)
}

class SkillRepository{
    - List<Skill> skills

    + void addSkill(skillName: String)
    + void removeSkill(skillName: String)
    + void updateSkill(skillNameOld: String, skillNameNew: String)
    + Skill getSkill(skillName: String)
}

class CreateSkillController {
    + searchForEmployee(idNumber: String): Employee
    + getSkills(): List<Skill>
    + addSkillToEmployee(idNumber: String, skill: Skill)
}

class RegisterSkillUI {
    + void run();
}

class MusgoSublime{
    - Repositories repositories

    + Repositories getInstance()
}

class Repositories{
    - SkillRepository skillRepository

    + SkillRepository getSkillRepository()
}

class RegisterSkillToCollaboratorController{
    + RegisterSkillToCollaboratorController(skillRepository)
    + createSkill(userEmail, skillName)
    - getEmployeeFromSession()
}

note right of CreateSkillController
    - userEmail is obtained from the user session
end note

Repositories -> Repositories : instance
ApplicationSession -> ApplicationSession : instance

RegisterSkillUI .> RegisterSkillToCollaboratorController

RegisterSkillToCollaboratorController .> Repositories : repositories

Repositories -> "1" SkillRepository

RegisterSkillToCollaboratorController ..> Skill
RegisterSkillToCollaboratorController ..> SkillRepository : SkillRepository

@enduml
