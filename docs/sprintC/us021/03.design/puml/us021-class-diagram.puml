@startuml

skinparam packageStyle rectangle
skinparam shadowing false
skinparam linetype polyline
skinparam linetype orto
skinparam classAttributeIconSize 0

class ToDoList {
    - taskDescription: String
    - urgency: String
    - expectedDuration: int
    - greenspaceName: String
    - status: String
    - userEmail: String

    + ToDoList(taskDescription: String, urgency: String, expectedDuration: int, greenspaceName: String, status: String, userEmail: String)
    + getTaskDescription(): String
    + getUrgency(): String
    + getExpectedDuration(): int
    + getGreenspaceName(): String
    + getStatus(): String
    + getUserEmail(): String
    + setStatus(status: String): void
    + clone(): ToDoList
}

class ToDoListRepository {
    - toDoLists: List<ToDoList>

    + add(toDoList: ToDoList): Optional<ToDoList>
    + getAllToDoLists(): List<ToDoList>
    + updateToDoListEntry(updatedEntry: ToDoList): void
    + getAll(): List<ToDoList>
    + findByTaskDescription(taskDescription: String): Optional<ToDoList>
    + findByUserEmailAndGreenSpaceName(userEmail: String, greenSpaceName: String): List<ToDoList>
}

class ToDoListController {
    - toDoListRepository: ToDoListRepository

    + ToDoListController()
    + createToDoListEntry(taskDescription: String, urgency: String, expectedDuration: int, greenspaceName: String, status: String, email: String): Optional<ToDoList>
    + updateToDoListStatus(taskDescription: String, newStatus: String): void
    + getAllToDoListEntries(): List<ToDoList>
}

class Repositories {
    + static getInstance(): Repositories
    + getToDoListRepository(): ToDoListRepository
    + getOrganizationRepository(): OrganizationRepository
}

class ToDoListUI {
    - controller: ToDoListController
    - scanner: Scanner
    - email: String

    + ToDoListUI(email: String)
    + run(): void
}

class UserSession {
    + getUserEmail(): String
}

class ApplicationSession {
    + static getInstance(): ApplicationSession
    + getCurrentSession(): UserSession
}

class Organization {
    - name: String
    - website: String
    - phone: String
    - email: String
    - vatNumber: String
    - List<Employee> employees
    - List<Task> tasks

    + Organization(vatNumber: String)
    + boolean employs(Employee employee)
    + Optional<Task> createTask(String reference, String description, String informalDescription, String technicalDescription, int duration, double cost, TaskCategory taskCategory, Employee employee)
    + boolean anyEmployeeHasEmail(String email)
    + boolean addEmployee(Employee employee)
    + Organization clone()
}

class OrganizationRepository {
    - organizations: List<Organization>

    + Optional<Organization> getOrganizationByEmployee(Employee employee)
    + Optional<Organization> getOrganizationByEmployeeEmail(String email)
    + Optional<Organization> add(Organization organization)
}

ToDoListController .> Repositories
Repositories --> ToDoListRepository
Repositories --> OrganizationRepository
OrganizationRepository --> Organization
ToDoListUI .> ToDoListController
ToDoListRepository --> ToDoList
ToDoListController --> ToDoList
ApplicationSession --> UserSession : userSession
ToDoListController ..> ApplicationSession
ToDoListController ..> UserSession
Organization ..> ToDoList : create a To Do List Entry
@enduml
