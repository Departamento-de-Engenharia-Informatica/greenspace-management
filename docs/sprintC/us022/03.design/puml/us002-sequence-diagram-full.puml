@startuml
skinparam monochrome true
skinparam packageStyle rectangle
skinparam shadowing false

autonumber

actor "Green Space Manager" as USER
participant "AgendaUI" as UI
participant "AgendaController" as CTRL
participant "Repositories" as Repositories
participant "ToDoListRepository" as ToDoListRepository
participant "GreenSpaceRepository" as GreenSpaceRepository
participant "AgendaRepository" as AgendaRepository
participant "ApplicationSession" as APP
participant "UserSession" as SESSION
participant "GreenSpace" as GREENSPACE
participant "ToDoList" as TODOLIST
participant "Agenda" as AGENDA
participant "OrganizationRepository" as OrganizationRepository
participant "Organization" as ORGANIZATION

activate USER

    USER -> UI : requests to create a new agenda entry
    activate UI

        UI -> CTRL : createAgendaEntryRequest()
        activate CTRL

            CTRL -> APP : getCurrentSession()
            activate APP

                APP -> SESSION : getUserEmail()
                activate SESSION

                    SESSION --> APP : email
                deactivate SESSION

                APP --> CTRL : email
            deactivate APP

            CTRL -> Repositories : getRepositories()
            activate Repositories

                Repositories --> CTRL : toDoListRepository, greenSpaceRepository, agendaRepository, organizationRepository
            deactivate Repositories

            CTRL -> GreenSpaceRepository : getAllManagedGreenSpaces(userEmail)
            activate GreenSpaceRepository

                GreenSpaceRepository --> CTRL : List<GreenSpace>
            deactivate GreenSpaceRepository

            CTRL -> ToDoListRepository : getAllToDoListEntries(userEmail)
            activate ToDoListRepository

                ToDoListRepository --> CTRL : List<ToDoList>
            deactivate ToDoListRepository

            CTRL -> OrganizationRepository : getOrganizationByEmployeeEmail(email)
            activate OrganizationRepository

                OrganizationRepository --> CTRL : Optional<Organization>
            deactivate OrganizationRepository

            CTRL --> UI : displayAvailableOptions(List<GreenSpace>, List<ToDoList>)
        deactivate CTRL

    deactivate UI

    USER -> UI : selects green space and to-do list entry, provides expected date and status
    activate UI

        UI -> CTRL : provideAgendaEntryDetails(selectedGreenSpace, selectedToDo, expectedDate, status)
        activate CTRL

            CTRL -> ORGANIZATION: addAgendaEntry(selectedToDo, selectedGreenSpace, expectedDate, status)
            activate ORGANIZATION

                ORGANIZATION -> AGENDA : new Agenda(selectedToDo, selectedGreenSpace, expectedDate, status)
                activate AGENDA

                    AGENDA -> AGENDA : validateDetails()
                    AGENDA -> AgendaRepository : saveAgendaEntry(AGENDA)
                deactivate AGENDA
                activate "AgendaRepository"
                    "AgendaRepository" ->CTRL : saveAgendaEntry(AGENDA

            deactivate AgendaRepository

            CTRL --> UI : confirmAgendaEntryCreation()
    deactivate CTRL

    UI --> USER : confirms successful agenda entry creation

deactivate USER

@enduml
